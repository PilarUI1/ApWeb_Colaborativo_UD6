const express = require('express');
const router = express.Router();
const Pelicula = require('../models/Pelicula');

// üìå Obtenemos todas las pel√≠culas
router.get('/', async (req, res) => {
    try {
        const peliculas = await Pelicula.find();
        res.json(peliculas);
    } catch (error) {
        res.status(500).json({ error: "Error al obtener las pel√≠culas" });
    }
});

// üìå Obtenemos una pel√≠cula por ID
router.get('/:id', async (req, res) => {
    try {
        const pelicula = await Pelicula.findById(req.params.id);
        if (!pelicula) return res.status(404).json({ error: "Pel√≠cula no encontrada" });
        res.json(pelicula);
    } catch (error) {
        res.status(500).json({ error: "Error al obtener la pel√≠cula" });
    }
});

// üìå Creamos una o varias pel√≠culas
router.post('/', async (req, res) => {
    try {
        // Verificamos si el cuerpo de la solicitud es un array o un objeto individual
        const data = Array.isArray(req.body) ? req.body : [req.body];

        // Insertamos m√∫ltiples pel√≠culas en la base de datos
        const peliculasInsertadas = await Pelicula.insertMany(data);

        res.status(201).json({ mensaje: "Pel√≠culas agregadas correctamente", peliculas: peliculasInsertadas });
    } catch (error) {
        console.error("‚ùå Error al crear la pel√≠cula:", error);
        res.status(400).json({ error: error.message });
    }
});

// üìå Actualizamos una pel√≠cula por ID
router.put('/:id', async (req, res) => {
    try {
        const peliculaActualizada = await Pelicula.findByIdAndUpdate(req.params.id, req.body, {new: true });
        if (!peliculaActualizada) return res.status(404).json({ error: "Pel√≠cula no encontrada" });
        res.json(peliculaActualizada);
    } catch (error) {
        res.status(500).json({ error: "Error al actualizar la pel√≠cula" });
    }
});

// üìå Eliminamos una pel√≠cula por ID
router.delete('/:id', async (req, res) => {
    try {
        const peliculaEliminada = await Pelicula.findByIdAndDelete(req.params.id);
        if (!peliculaEliminada) return res.status(404).json({ error: "Pel√≠cula no encontrada" });
        res.json({ mensaje: "Pel√≠cula eliminada correctamente" });
    } catch (error) {
        res.status(500).json({ error: "Error al eliminar la pel√≠cula" });
    }
});

module.exports = router;